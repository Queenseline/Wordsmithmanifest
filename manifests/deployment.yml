apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: wordsmith
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: go-frontend
          image: seline/webapp:v1
          env:
            - name: API_URL
              value: "http://api:8080"
          ports:
            - containerPort: 80
          resources: {}
          
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: wordsmith
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: java-api
          image: seline/api:latest
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://db:5432/mydb"
            - name: SPRING_DATASOURCE_USERNAME
              value: "postgres"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "postgres"
          ports:
            - containerPort: 8080
          resources: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: wordsmith
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      initContainers:
        - name: init-db
          image: postgres:15
          command: ['sh', '-c', 'psql -U postgres -f /docker-entrypoint-initdb.d/init.sql 2>&1 | tee /tmp/init.log']
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
          volumeMounts:
            - name: db-init-script
              mountPath: /docker-entrypoint-initdb.d
      containers:
        - name: postgres
          image: postgres:15
          env:
            - name: POSTGRES_DB
              value: "postgres"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-pvc
        - name: db-init-script
          configMap:
            name: db-init-script
